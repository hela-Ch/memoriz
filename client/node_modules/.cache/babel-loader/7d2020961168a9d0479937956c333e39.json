{"ast":null,"code":"export const getData = async () => {\n  try {\n    const res = await fetch(\"http://localhost:9000/posts\"); //console.log(res);\n\n    const data = await res.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(\"oups error\");\n  } //.then(data => console.log(data))\n  //.catch(err => console.log(\"oups error\"))\n\n};\nexport const postData = async newMemory => {\n  let data = new FormData();\n  data.append(\"img\", newMemory.img);\n  data.set(\"title\", newMemory.title);\n  data.set(\"description\", newMemory.description);\n  data.set(\"date\", newMemory.date);\n  data.set(\"like\", newMemory.like);\n  data.set(\"category\", newMemory.category);\n\n  try {\n    const res = await fetch('http://localhost:9000', {\n      method: 'POST',\n      body: data\n    });\n    const newData = await res.json();\n    return newData;\n  } catch (err) {\n    console.log(`oups error ${err}`);\n  }\n\n  ;\n};\nexport const modifyData = async (memoryToModify, req) => {\n  /*let data = new FormData();\n     data.append(\"img\" ,memoryToModify.img);\n     data.set(\"title\" ,memoryToModify.title);\n     data.set(\"description\",memoryToModify.description);\n     data.set(\"date\",memoryToModify.date);\n     data.set(\"like\",memoryToModify.like);\n     data.set(\"category\",memoryToModify.category);*/\n  try {\n    const res = await fetch(\"http://localhost:9000/\" + memoryToModify._id, {\n      method: 'PUT',\n      //header:{ \"Content-Type\": \"multipart/form-data\"},\n\n      /*headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(memoryToModify)*/\n      body: memory\n    });\n    console.log(memoryToModify._id);\n    const memoryModified = await res.json();\n    console.log(memoryModified);\n    return memoryModified;\n  } catch (err) {\n    console.log(`oups error ${err}`);\n  }\n\n  ;\n};","map":{"version":3,"sources":["/Users/hlihla/Desktop/create your memories/client/src/utils.js"],"names":["getData","res","fetch","data","json","console","log","error","postData","newMemory","FormData","append","img","set","title","description","date","like","category","method","body","newData","err","modifyData","memoryToModify","req","_id","memory","memoryModified"],"mappings":"AACA,OAAO,MAAMA,OAAO,GAAG,YAAY;AACjC,MAAG;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB,CADE,CAEF;;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACA,GAND,CAMC,OAAMI,KAAN,EAAY;AAACF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAA0B,GAPP,CAQ5B;AACA;;AAEN,CAXM;AAcP,OAAO,MAAME,QAAQ,GAAG,MAAOC,SAAP,IAAqB;AACzC,MAAIN,IAAI,GAAG,IAAIO,QAAJ,EAAX;AACAP,EAAAA,IAAI,CAACQ,MAAL,CAAY,KAAZ,EAAmBF,SAAS,CAACG,GAA7B;AACAT,EAAAA,IAAI,CAACU,GAAL,CAAS,OAAT,EAAkBJ,SAAS,CAACK,KAA5B;AACAX,EAAAA,IAAI,CAACU,GAAL,CAAS,aAAT,EAAuBJ,SAAS,CAACM,WAAjC;AACAZ,EAAAA,IAAI,CAACU,GAAL,CAAS,MAAT,EAAgBJ,SAAS,CAACO,IAA1B;AACAb,EAAAA,IAAI,CAACU,GAAL,CAAS,MAAT,EAAiBJ,SAAS,CAACQ,IAA3B;AACAd,EAAAA,IAAI,CAACU,GAAL,CAAS,UAAT,EAAoBJ,SAAS,CAACS,QAA9B;;AACF,MAAG;AACF,UAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAE,uBAAF,EAA2B;AACrCiB,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,IAAI,EAAEjB;AAF+B,KAA3B,CAAvB;AAID,UAAMkB,OAAO,GAAG,MAAMpB,GAAG,CAACG,IAAJ,EAAtB;AACA,WAAOiB,OAAP;AACC,GAPD,CAQA,OAAMC,GAAN,EAAU;AAAEjB,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAagB,GAAI,EAA9B;AAAiC;;AAAA;AAE9C,CAlBM;AAqBP,OAAO,MAAMC,UAAU,GAAG,OAAOC,cAAP,EAAsBC,GAAtB,KAA6B;AACtD;AACD;AACA;AACA;AACA;AACA;AACA;AACI,MAAG;AACD,UAAMxB,GAAG,GAAG,MAAMC,KAAK,CAAE,2BAAyBsB,cAAc,CAACE,GAA1C,EAA+C;AAC5DP,MAAAA,MAAM,EAAE,KADoD;AAE5D;;AACA;AAChB;AACA;AACA;AACgBC,MAAAA,IAAI,EAAEO;AAPsD,KAA/C,CAAvB;AASQtB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,cAAc,CAACE,GAA3B;AACZ,UAAME,cAAc,GAAG,MAAM3B,GAAG,CAACG,IAAJ,EAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYsB,cAAZ;AACA,WAAOA,cAAP;AACE,GAdA,CAcA,OAAMN,GAAN,EAAU;AAAEjB,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAagB,GAAI,EAA9B;AAAiC;;AAAA;AAEhD,CAxBM","sourcesContent":["\nexport const getData = async () => {\n  try{\n   const res = await fetch(\"http://localhost:9000/posts\");\n   //console.log(res);\n   const data = await res.json();\n   console.log(data);\n   return data;\n  }catch(error){console.log(\"oups error\")}\n       //.then(data => console.log(data))\n       //.catch(err => console.log(\"oups error\"))\n         \n}\n\n\nexport const postData = async (newMemory) => {\n    let data = new FormData();\n    data.append(\"img\" ,newMemory.img);\n    data.set(\"title\" ,newMemory.title);\n    data.set(\"description\",newMemory.description);\n    data.set(\"date\",newMemory.date);\n    data.set(\"like\", newMemory.like);\n    data.set(\"category\",newMemory.category);\n  try{\n   const res = await fetch ('http://localhost:9000', {\n                method: 'POST',\n                body: data,    \n              })\n  const newData = await res.json();\n  return newData ;\n  } \n  catch(err){ console.log(`oups error ${err}`)};\n\n}\n\n\nexport const modifyData = async (memoryToModify,req) =>{\n /*let data = new FormData();\n    data.append(\"img\" ,memoryToModify.img);\n    data.set(\"title\" ,memoryToModify.title);\n    data.set(\"description\",memoryToModify.description);\n    data.set(\"date\",memoryToModify.date);\n    data.set(\"like\",memoryToModify.like);\n    data.set(\"category\",memoryToModify.category);*/\n    try{\n      const res = await fetch (\"http://localhost:9000/\"+memoryToModify._id, {\n                method: 'PUT',\n                //header:{ \"Content-Type\": \"multipart/form-data\"},\n                /*headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(memoryToModify)*/\n                body: memory,\n              })\n              console.log(memoryToModify._id);\n  const memoryModified = await res.json();\n  console.log(memoryModified);\n  return memoryModified ;\n   }catch(err){ console.log(`oups error ${err}`)};\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}